
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00000184  00000218  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000184  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080012a  0080012a  00000242  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00000242  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000254  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e8       	ldi	r30, 0x84	; 132
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 32       	cpi	r26, 0x2A	; 42
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e2       	ldi	r26, 0x2A	; 42
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 33       	cpi	r26, 0x30	; 48
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 7a 00 	call	0xf4	; 0xf4 <main>
  9e:	0c 94 c0 00 	jmp	0x180	; 0x180 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
  b4:	80 91 c0 00 	lds	r24, 0x00C0
  b8:	85 ff       	sbrs	r24, 5
  ba:	fc cf       	rjmp	.-8      	; 0xb4 <uart_putchar+0xe>
  bc:	c0 93 c6 00 	sts	0x00C6, r28
  c0:	cf 91       	pop	r28
  c2:	08 95       	ret

000000c4 <uart_getchar>:
  c4:	80 91 c0 00 	lds	r24, 0x00C0
  c8:	87 ff       	sbrs	r24, 7
  ca:	fc cf       	rjmp	.-8      	; 0xc4 <uart_getchar>
  cc:	80 91 c6 00 	lds	r24, 0x00C6
  d0:	08 95       	ret

000000d2 <uart_init>:
  d2:	10 92 c5 00 	sts	0x00C5, r1
  d6:	87 e6       	ldi	r24, 0x67	; 103
  d8:	80 93 c4 00 	sts	0x00C4, r24
  dc:	e0 ec       	ldi	r30, 0xC0	; 192
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	8d 7f       	andi	r24, 0xFD	; 253
  e4:	80 83       	st	Z, r24
  e6:	86 e0       	ldi	r24, 0x06	; 6
  e8:	80 93 c2 00 	sts	0x00C2, r24
  ec:	88 e1       	ldi	r24, 0x18	; 24
  ee:	80 93 c1 00 	sts	0x00C1, r24
  f2:	08 95       	ret

000000f4 <main>:
  f4:	0e 94 69 00 	call	0xd2	; 0xd2 <uart_init>
  f8:	8e e0       	ldi	r24, 0x0E	; 14
  fa:	91 e0       	ldi	r25, 0x01	; 1
  fc:	90 93 2d 01 	sts	0x012D, r25
 100:	80 93 2c 01 	sts	0x012C, r24
 104:	8c e1       	ldi	r24, 0x1C	; 28
 106:	91 e0       	ldi	r25, 0x01	; 1
 108:	0e 94 90 00 	call	0x120	; 0x120 <puts>
 10c:	2f ef       	ldi	r18, 0xFF	; 255
 10e:	87 ea       	ldi	r24, 0xA7	; 167
 110:	91 e6       	ldi	r25, 0x61	; 97
 112:	21 50       	subi	r18, 0x01	; 1
 114:	80 40       	sbci	r24, 0x00	; 0
 116:	90 40       	sbci	r25, 0x00	; 0
 118:	e1 f7       	brne	.-8      	; 0x112 <main+0x1e>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <main+0x28>
 11c:	00 00       	nop
 11e:	f2 cf       	rjmp	.-28     	; 0x104 <main+0x10>

00000120 <puts>:
 120:	0f 93       	push	r16
 122:	1f 93       	push	r17
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	e0 91 2c 01 	lds	r30, 0x012C
 12c:	f0 91 2d 01 	lds	r31, 0x012D
 130:	23 81       	ldd	r18, Z+3	; 0x03
 132:	21 ff       	sbrs	r18, 1
 134:	1b c0       	rjmp	.+54     	; 0x16c <puts+0x4c>
 136:	8c 01       	movw	r16, r24
 138:	d0 e0       	ldi	r29, 0x00	; 0
 13a:	c0 e0       	ldi	r28, 0x00	; 0
 13c:	f8 01       	movw	r30, r16
 13e:	81 91       	ld	r24, Z+
 140:	8f 01       	movw	r16, r30
 142:	60 91 2c 01 	lds	r22, 0x012C
 146:	70 91 2d 01 	lds	r23, 0x012D
 14a:	db 01       	movw	r26, r22
 14c:	18 96       	adiw	r26, 0x08	; 8
 14e:	ed 91       	ld	r30, X+
 150:	fc 91       	ld	r31, X
 152:	19 97       	sbiw	r26, 0x09	; 9
 154:	88 23       	and	r24, r24
 156:	31 f0       	breq	.+12     	; 0x164 <puts+0x44>
 158:	09 95       	icall
 15a:	89 2b       	or	r24, r25
 15c:	79 f3       	breq	.-34     	; 0x13c <puts+0x1c>
 15e:	df ef       	ldi	r29, 0xFF	; 255
 160:	cf ef       	ldi	r28, 0xFF	; 255
 162:	ec cf       	rjmp	.-40     	; 0x13c <puts+0x1c>
 164:	8a e0       	ldi	r24, 0x0A	; 10
 166:	09 95       	icall
 168:	89 2b       	or	r24, r25
 16a:	19 f0       	breq	.+6      	; 0x172 <puts+0x52>
 16c:	8f ef       	ldi	r24, 0xFF	; 255
 16e:	9f ef       	ldi	r25, 0xFF	; 255
 170:	02 c0       	rjmp	.+4      	; 0x176 <puts+0x56>
 172:	8d 2f       	mov	r24, r29
 174:	9c 2f       	mov	r25, r28
 176:	df 91       	pop	r29
 178:	cf 91       	pop	r28
 17a:	1f 91       	pop	r17
 17c:	0f 91       	pop	r16
 17e:	08 95       	ret

00000180 <_exit>:
 180:	f8 94       	cli

00000182 <__stop_program>:
 182:	ff cf       	rjmp	.-2      	; 0x182 <__stop_program>
