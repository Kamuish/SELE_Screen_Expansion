
screen_expansion.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000664  000006d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000664  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000011  00000000  00000000  000006ea  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006fc  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e6       	ldi	r30, 0x64	; 100
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 c7 02 	call	0x58e	; 0x58e <main>
  8e:	0c 94 30 03 	jmp	0x660	; 0x660 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <I2C_Init>:
  96:	10 92 b9 00 	sts	0x00B9, r1
  9a:	8d ef       	ldi	r24, 0xFD	; 253
  9c:	80 93 b8 00 	sts	0x00B8, r24
  a0:	08 95       	ret

000000a2 <I2C_Stop>:
  a2:	84 e9       	ldi	r24, 0x94	; 148
  a4:	80 93 bc 00 	sts	0x00BC, r24
  a8:	80 91 bc 00 	lds	r24, 0x00BC
  ac:	84 fd       	sbrc	r24, 4
  ae:	fc cf       	rjmp	.-8      	; 0xa8 <I2C_Stop+0x6>
  b0:	08 95       	ret

000000b2 <I2C_WaitForTwint>:
  b2:	80 91 bc 00 	lds	r24, 0x00BC
  b6:	87 ff       	sbrs	r24, 7
  b8:	fc cf       	rjmp	.-8      	; 0xb2 <I2C_WaitForTwint>
  ba:	08 95       	ret

000000bc <I2C_Start>:
  bc:	0f 93       	push	r16
  be:	1f 93       	push	r17
  c0:	cf 93       	push	r28
  c2:	df 93       	push	r29
  c4:	1f 92       	push	r1
  c6:	cd b7       	in	r28, 0x3d	; 61
  c8:	de b7       	in	r29, 0x3e	; 62
  ca:	0c eb       	ldi	r16, 0xBC	; 188
  cc:	10 e0       	ldi	r17, 0x00	; 0
  ce:	94 ea       	ldi	r25, 0xA4	; 164
  d0:	f8 01       	movw	r30, r16
  d2:	90 83       	st	Z, r25
  d4:	89 83       	std	Y+1, r24	; 0x01
  d6:	0e 94 59 00 	call	0xb2	; 0xb2 <I2C_WaitForTwint>
  da:	89 81       	ldd	r24, Y+1	; 0x01
  dc:	80 93 bb 00 	sts	0x00BB, r24
  e0:	84 e8       	ldi	r24, 0x84	; 132
  e2:	f8 01       	movw	r30, r16
  e4:	80 83       	st	Z, r24
  e6:	0f 90       	pop	r0
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	1f 91       	pop	r17
  ee:	0f 91       	pop	r16
  f0:	0c 94 59 00 	jmp	0xb2	; 0xb2 <I2C_WaitForTwint>

000000f4 <I2C_Write>:
  f4:	80 93 bb 00 	sts	0x00BB, r24
  f8:	84 e8       	ldi	r24, 0x84	; 132
  fa:	80 93 bc 00 	sts	0x00BC, r24
  fe:	0e 94 59 00 	call	0xb2	; 0xb2 <I2C_WaitForTwint>
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	08 95       	ret

00000106 <ReverseNibble>:
 106:	cf 93       	push	r28
 108:	df 93       	push	r29
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	48 2f       	mov	r20, r24
 112:	50 e0       	ldi	r21, 0x00	; 0
 114:	67 e0       	ldi	r22, 0x07	; 7
 116:	70 e0       	ldi	r23, 0x00	; 0
 118:	e1 e0       	ldi	r30, 0x01	; 1
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	da 01       	movw	r26, r20
 11e:	02 2e       	mov	r0, r18
 120:	02 c0       	rjmp	.+4      	; 0x126 <ReverseNibble+0x20>
 122:	b5 95       	asr	r27
 124:	a7 95       	ror	r26
 126:	0a 94       	dec	r0
 128:	e2 f7       	brpl	.-8      	; 0x122 <ReverseNibble+0x1c>
 12a:	a0 ff       	sbrs	r26, 0
 12c:	0a c0       	rjmp	.+20     	; 0x142 <ReverseNibble+0x3c>
 12e:	db 01       	movw	r26, r22
 130:	a2 1b       	sub	r26, r18
 132:	b3 0b       	sbc	r27, r19
 134:	ef 01       	movw	r28, r30
 136:	02 c0       	rjmp	.+4      	; 0x13c <ReverseNibble+0x36>
 138:	cc 0f       	add	r28, r28
 13a:	dd 1f       	adc	r29, r29
 13c:	aa 95       	dec	r26
 13e:	e2 f7       	brpl	.-8      	; 0x138 <ReverseNibble+0x32>
 140:	9c 2b       	or	r25, r28
 142:	2f 5f       	subi	r18, 0xFF	; 255
 144:	3f 4f       	sbci	r19, 0xFF	; 255
 146:	28 30       	cpi	r18, 0x08	; 8
 148:	31 05       	cpc	r19, r1
 14a:	41 f7       	brne	.-48     	; 0x11c <ReverseNibble+0x16>
 14c:	89 2f       	mov	r24, r25
 14e:	df 91       	pop	r29
 150:	cf 91       	pop	r28
 152:	08 95       	ret

00000154 <TransferData>:
 154:	61 30       	cpi	r22, 0x01	; 1
 156:	11 f4       	brne	.+4      	; 0x15c <TransferData+0x8>
 158:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <I2C_Write>
 15c:	0c 94 52 02 	jmp	0x4a4	; 0x4a4 <SPI_MasterTransmit>

00000160 <ScreenInstruction>:
 160:	1f 93       	push	r17
 162:	cf 93       	push	r28
 164:	df 93       	push	r29
 166:	16 2f       	mov	r17, r22
 168:	d8 2f       	mov	r29, r24
 16a:	d0 7f       	andi	r29, 0xF0	; 240
 16c:	c8 2f       	mov	r28, r24
 16e:	cf 70       	andi	r28, 0x0F	; 15
 170:	61 11       	cpse	r22, r1
 172:	0c c0       	rjmp	.+24     	; 0x18c <ScreenInstruction+0x2c>
 174:	8d 2f       	mov	r24, r29
 176:	0e 94 83 00 	call	0x106	; 0x106 <ReverseNibble>
 17a:	d8 2f       	mov	r29, r24
 17c:	d2 95       	swap	r29
 17e:	d0 7f       	andi	r29, 0xF0	; 240
 180:	8c 2f       	mov	r24, r28
 182:	0e 94 83 00 	call	0x106	; 0x106 <ReverseNibble>
 186:	c8 2f       	mov	r28, r24
 188:	c2 95       	swap	r28
 18a:	cf 70       	andi	r28, 0x0F	; 15
 18c:	d6 95       	lsr	r29
 18e:	8d 2f       	mov	r24, r29
 190:	8d 7f       	andi	r24, 0xFD	; 253
 192:	61 2f       	mov	r22, r17
 194:	84 60       	ori	r24, 0x04	; 4
 196:	0e 94 aa 00 	call	0x154	; 0x154 <TransferData>
 19a:	61 2f       	mov	r22, r17
 19c:	8d 2f       	mov	r24, r29
 19e:	89 77       	andi	r24, 0x79	; 121
 1a0:	0e 94 aa 00 	call	0x154	; 0x154 <TransferData>
 1a4:	83 ec       	ldi	r24, 0xC3	; 195
 1a6:	99 e0       	ldi	r25, 0x09	; 9
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <ScreenInstruction+0x48>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <ScreenInstruction+0x4e>
 1ae:	00 00       	nop
 1b0:	cc 0f       	add	r28, r28
 1b2:	cc 0f       	add	r28, r28
 1b4:	cc 0f       	add	r28, r28
 1b6:	61 2f       	mov	r22, r17
 1b8:	8c 2f       	mov	r24, r28
 1ba:	84 60       	ori	r24, 0x04	; 4
 1bc:	0e 94 aa 00 	call	0x154	; 0x154 <TransferData>
 1c0:	61 2f       	mov	r22, r17
 1c2:	8c 2f       	mov	r24, r28
 1c4:	80 68       	ori	r24, 0x80	; 128
 1c6:	0e 94 aa 00 	call	0x154	; 0x154 <TransferData>
 1ca:	83 ec       	ldi	r24, 0xC3	; 195
 1cc:	99 e0       	ldi	r25, 0x09	; 9
 1ce:	01 97       	sbiw	r24, 0x01	; 1
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <ScreenInstruction+0x6e>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <ScreenInstruction+0x74>
 1d4:	00 00       	nop
 1d6:	df 91       	pop	r29
 1d8:	cf 91       	pop	r28
 1da:	1f 91       	pop	r17
 1dc:	08 95       	ret

000001de <ScreenData>:
 1de:	1f 93       	push	r17
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	c8 2f       	mov	r28, r24
 1e6:	d6 2f       	mov	r29, r22
 1e8:	18 2f       	mov	r17, r24
 1ea:	10 7f       	andi	r17, 0xF0	; 240
 1ec:	16 95       	lsr	r17
 1ee:	81 2f       	mov	r24, r17
 1f0:	86 68       	ori	r24, 0x86	; 134
 1f2:	0e 94 aa 00 	call	0x154	; 0x154 <TransferData>
 1f6:	6d 2f       	mov	r22, r29
 1f8:	81 2f       	mov	r24, r17
 1fa:	82 68       	ori	r24, 0x82	; 130
 1fc:	0e 94 aa 00 	call	0x154	; 0x154 <TransferData>
 200:	83 ec       	ldi	r24, 0xC3	; 195
 202:	99 e0       	ldi	r25, 0x09	; 9
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <ScreenData+0x26>
 208:	00 c0       	rjmp	.+0      	; 0x20a <ScreenData+0x2c>
 20a:	00 00       	nop
 20c:	cf 70       	andi	r28, 0x0F	; 15
 20e:	cc 0f       	add	r28, r28
 210:	cc 0f       	add	r28, r28
 212:	cc 0f       	add	r28, r28
 214:	6d 2f       	mov	r22, r29
 216:	8c 2f       	mov	r24, r28
 218:	86 68       	ori	r24, 0x86	; 134
 21a:	0e 94 aa 00 	call	0x154	; 0x154 <TransferData>
 21e:	6d 2f       	mov	r22, r29
 220:	8c 2f       	mov	r24, r28
 222:	82 68       	ori	r24, 0x82	; 130
 224:	0e 94 aa 00 	call	0x154	; 0x154 <TransferData>
 228:	83 ec       	ldi	r24, 0xC3	; 195
 22a:	99 e0       	ldi	r25, 0x09	; 9
 22c:	01 97       	sbiw	r24, 0x01	; 1
 22e:	f1 f7       	brne	.-4      	; 0x22c <ScreenData+0x4e>
 230:	00 c0       	rjmp	.+0      	; 0x232 <ScreenData+0x54>
 232:	00 00       	nop
 234:	df 91       	pop	r29
 236:	cf 91       	pop	r28
 238:	1f 91       	pop	r17
 23a:	08 95       	ret

0000023c <PutChar>:
 23c:	0f 93       	push	r16
 23e:	1f 93       	push	r17
 240:	cf 93       	push	r28
 242:	df 93       	push	r29
 244:	1f 92       	push	r1
 246:	cd b7       	in	r28, 0x3d	; 61
 248:	de b7       	in	r29, 0x3e	; 62
 24a:	61 11       	cpse	r22, r1
 24c:	12 c0       	rjmp	.+36     	; 0x272 <PutChar+0x36>
 24e:	18 2f       	mov	r17, r24
 250:	1f 70       	andi	r17, 0x0F	; 15
 252:	80 7f       	andi	r24, 0xF0	; 240
 254:	69 83       	std	Y+1, r22	; 0x01
 256:	0e 94 83 00 	call	0x106	; 0x106 <ReverseNibble>
 25a:	08 2f       	mov	r16, r24
 25c:	81 2f       	mov	r24, r17
 25e:	0e 94 83 00 	call	0x106	; 0x106 <ReverseNibble>
 262:	90 e1       	ldi	r25, 0x10	; 16
 264:	09 9f       	mul	r16, r25
 266:	90 01       	movw	r18, r0
 268:	11 24       	eor	r1, r1
 26a:	82 95       	swap	r24
 26c:	8f 70       	andi	r24, 0x0F	; 15
 26e:	82 2b       	or	r24, r18
 270:	69 81       	ldd	r22, Y+1	; 0x01
 272:	0f 90       	pop	r0
 274:	df 91       	pop	r29
 276:	cf 91       	pop	r28
 278:	1f 91       	pop	r17
 27a:	0f 91       	pop	r16
 27c:	0c 94 ef 00 	jmp	0x1de	; 0x1de <ScreenData>

00000280 <PutString>:
 280:	cf 92       	push	r12
 282:	df 92       	push	r13
 284:	ef 92       	push	r14
 286:	ff 92       	push	r15
 288:	0f 93       	push	r16
 28a:	1f 93       	push	r17
 28c:	cf 93       	push	r28
 28e:	df 93       	push	r29
 290:	1f 92       	push	r1
 292:	cd b7       	in	r28, 0x3d	; 61
 294:	de b7       	in	r29, 0x3e	; 62
 296:	7c 01       	movw	r14, r24
 298:	8c 01       	movw	r16, r24
 29a:	6b 01       	movw	r12, r22
 29c:	dd 24       	eor	r13, r13
 29e:	c8 01       	movw	r24, r16
 2a0:	8e 19       	sub	r24, r14
 2a2:	9f 09       	sbc	r25, r15
 2a4:	8c 15       	cp	r24, r12
 2a6:	9d 05       	cpc	r25, r13
 2a8:	4c f4       	brge	.+18     	; 0x2bc <PutString+0x3c>
 2aa:	64 2f       	mov	r22, r20
 2ac:	f8 01       	movw	r30, r16
 2ae:	81 91       	ld	r24, Z+
 2b0:	8f 01       	movw	r16, r30
 2b2:	49 83       	std	Y+1, r20	; 0x01
 2b4:	0e 94 1e 01 	call	0x23c	; 0x23c <PutChar>
 2b8:	49 81       	ldd	r20, Y+1	; 0x01
 2ba:	f1 cf       	rjmp	.-30     	; 0x29e <PutString+0x1e>
 2bc:	0f 90       	pop	r0
 2be:	df 91       	pop	r29
 2c0:	cf 91       	pop	r28
 2c2:	1f 91       	pop	r17
 2c4:	0f 91       	pop	r16
 2c6:	ff 90       	pop	r15
 2c8:	ef 90       	pop	r14
 2ca:	df 90       	pop	r13
 2cc:	cf 90       	pop	r12
 2ce:	08 95       	ret

000002d0 <Send4BitCommand>:
 2d0:	cf 93       	push	r28
 2d2:	df 93       	push	r29
 2d4:	c8 2f       	mov	r28, r24
 2d6:	d6 2f       	mov	r29, r22
 2d8:	8d 7f       	andi	r24, 0xFD	; 253
 2da:	84 60       	ori	r24, 0x04	; 4
 2dc:	0e 94 aa 00 	call	0x154	; 0x154 <TransferData>
 2e0:	6d 2f       	mov	r22, r29
 2e2:	8c 2f       	mov	r24, r28
 2e4:	89 7f       	andi	r24, 0xF9	; 249
 2e6:	df 91       	pop	r29
 2e8:	cf 91       	pop	r28
 2ea:	0c 94 aa 00 	jmp	0x154	; 0x154 <TransferData>

000002ee <I2C_InitScreen>:
 2ee:	0e 94 4b 00 	call	0x96	; 0x96 <I2C_Init>
 2f2:	87 ea       	ldi	r24, 0xA7	; 167
 2f4:	91 e6       	ldi	r25, 0x61	; 97
 2f6:	01 97       	sbiw	r24, 0x01	; 1
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <I2C_InitScreen+0x8>
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <I2C_InitScreen+0xe>
 2fc:	00 00       	nop
 2fe:	87 ea       	ldi	r24, 0xA7	; 167
 300:	91 e6       	ldi	r25, 0x61	; 97
 302:	01 97       	sbiw	r24, 0x01	; 1
 304:	f1 f7       	brne	.-4      	; 0x302 <I2C_InitScreen+0x14>
 306:	00 c0       	rjmp	.+0      	; 0x308 <I2C_InitScreen+0x1a>
 308:	00 00       	nop
 30a:	80 e4       	ldi	r24, 0x40	; 64
 30c:	0e 94 5e 00 	call	0xbc	; 0xbc <I2C_Start>
 310:	89 ef       	ldi	r24, 0xF9	; 249
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	01 97       	sbiw	r24, 0x01	; 1
 316:	f1 f7       	brne	.-4      	; 0x314 <I2C_InitScreen+0x26>
 318:	00 c0       	rjmp	.+0      	; 0x31a <I2C_InitScreen+0x2c>
 31a:	00 00       	nop
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	0e 94 7a 00 	call	0xf4	; 0xf4 <I2C_Write>
 322:	89 ef       	ldi	r24, 0xF9	; 249
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	01 97       	sbiw	r24, 0x01	; 1
 328:	f1 f7       	brne	.-4      	; 0x326 <I2C_InitScreen+0x38>
 32a:	00 c0       	rjmp	.+0      	; 0x32c <I2C_InitScreen+0x3e>
 32c:	00 00       	nop
 32e:	80 e0       	ldi	r24, 0x00	; 0
 330:	0e 94 7a 00 	call	0xf4	; 0xf4 <I2C_Write>
 334:	0e 94 51 00 	call	0xa2	; 0xa2 <I2C_Stop>
 338:	87 ea       	ldi	r24, 0xA7	; 167
 33a:	91 e6       	ldi	r25, 0x61	; 97
 33c:	01 97       	sbiw	r24, 0x01	; 1
 33e:	f1 f7       	brne	.-4      	; 0x33c <I2C_InitScreen+0x4e>
 340:	00 c0       	rjmp	.+0      	; 0x342 <I2C_InitScreen+0x54>
 342:	00 00       	nop
 344:	80 e4       	ldi	r24, 0x40	; 64
 346:	0e 94 5e 00 	call	0xbc	; 0xbc <I2C_Start>
 34a:	87 ea       	ldi	r24, 0xA7	; 167
 34c:	91 e6       	ldi	r25, 0x61	; 97
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	f1 f7       	brne	.-4      	; 0x34e <I2C_InitScreen+0x60>
 352:	00 c0       	rjmp	.+0      	; 0x354 <I2C_InitScreen+0x66>
 354:	00 00       	nop
 356:	85 e0       	ldi	r24, 0x05	; 5
 358:	0e 94 7a 00 	call	0xf4	; 0xf4 <I2C_Write>
 35c:	83 ec       	ldi	r24, 0xC3	; 195
 35e:	99 e0       	ldi	r25, 0x09	; 9
 360:	01 97       	sbiw	r24, 0x01	; 1
 362:	f1 f7       	brne	.-4      	; 0x360 <I2C_InitScreen+0x72>
 364:	00 c0       	rjmp	.+0      	; 0x366 <I2C_InitScreen+0x78>
 366:	00 00       	nop
 368:	80 e2       	ldi	r24, 0x20	; 32
 36a:	0e 94 7a 00 	call	0xf4	; 0xf4 <I2C_Write>
 36e:	0e 94 51 00 	call	0xa2	; 0xa2 <I2C_Stop>
 372:	80 e4       	ldi	r24, 0x40	; 64
 374:	0e 94 5e 00 	call	0xbc	; 0xbc <I2C_Start>
 378:	87 ea       	ldi	r24, 0xA7	; 167
 37a:	91 e6       	ldi	r25, 0x61	; 97
 37c:	01 97       	sbiw	r24, 0x01	; 1
 37e:	f1 f7       	brne	.-4      	; 0x37c <I2C_InitScreen+0x8e>
 380:	00 c0       	rjmp	.+0      	; 0x382 <I2C_InitScreen+0x94>
 382:	00 00       	nop
 384:	89 e0       	ldi	r24, 0x09	; 9
 386:	0e 94 7a 00 	call	0xf4	; 0xf4 <I2C_Write>
 38a:	83 ec       	ldi	r24, 0xC3	; 195
 38c:	99 e0       	ldi	r25, 0x09	; 9
 38e:	01 97       	sbiw	r24, 0x01	; 1
 390:	f1 f7       	brne	.-4      	; 0x38e <I2C_InitScreen+0xa0>
 392:	00 c0       	rjmp	.+0      	; 0x394 <I2C_InitScreen+0xa6>
 394:	00 00       	nop
 396:	61 e0       	ldi	r22, 0x01	; 1
 398:	88 e1       	ldi	r24, 0x18	; 24
 39a:	0e 94 68 01 	call	0x2d0	; 0x2d0 <Send4BitCommand>
 39e:	89 e0       	ldi	r24, 0x09	; 9
 3a0:	98 e2       	ldi	r25, 0x28	; 40
 3a2:	01 97       	sbiw	r24, 0x01	; 1
 3a4:	f1 f7       	brne	.-4      	; 0x3a2 <I2C_InitScreen+0xb4>
 3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <I2C_InitScreen+0xba>
 3a8:	00 00       	nop
 3aa:	61 e0       	ldi	r22, 0x01	; 1
 3ac:	88 e1       	ldi	r24, 0x18	; 24
 3ae:	0e 94 68 01 	call	0x2d0	; 0x2d0 <Send4BitCommand>
 3b2:	89 ef       	ldi	r24, 0xF9	; 249
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	01 97       	sbiw	r24, 0x01	; 1
 3b8:	f1 f7       	brne	.-4      	; 0x3b6 <I2C_InitScreen+0xc8>
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <I2C_InitScreen+0xce>
 3bc:	00 00       	nop
 3be:	61 e0       	ldi	r22, 0x01	; 1
 3c0:	88 e1       	ldi	r24, 0x18	; 24
 3c2:	0e 94 68 01 	call	0x2d0	; 0x2d0 <Send4BitCommand>
 3c6:	89 ef       	ldi	r24, 0xF9	; 249
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	01 97       	sbiw	r24, 0x01	; 1
 3cc:	f1 f7       	brne	.-4      	; 0x3ca <I2C_InitScreen+0xdc>
 3ce:	00 c0       	rjmp	.+0      	; 0x3d0 <I2C_InitScreen+0xe2>
 3d0:	00 00       	nop
 3d2:	61 e0       	ldi	r22, 0x01	; 1
 3d4:	80 e1       	ldi	r24, 0x10	; 16
 3d6:	0e 94 68 01 	call	0x2d0	; 0x2d0 <Send4BitCommand>
 3da:	83 ec       	ldi	r24, 0xC3	; 195
 3dc:	99 e0       	ldi	r25, 0x09	; 9
 3de:	01 97       	sbiw	r24, 0x01	; 1
 3e0:	f1 f7       	brne	.-4      	; 0x3de <I2C_InitScreen+0xf0>
 3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <I2C_InitScreen+0xf6>
 3e4:	00 00       	nop
 3e6:	08 95       	ret

000003e8 <SPI_InitScreen>:
 3e8:	0e 94 42 02 	call	0x484	; 0x484 <SPI_MasterInit>
 3ec:	2f e7       	ldi	r18, 0x7F	; 127
 3ee:	88 e3       	ldi	r24, 0x38	; 56
 3f0:	91 e0       	ldi	r25, 0x01	; 1
 3f2:	21 50       	subi	r18, 0x01	; 1
 3f4:	80 40       	sbci	r24, 0x00	; 0
 3f6:	90 40       	sbci	r25, 0x00	; 0
 3f8:	e1 f7       	brne	.-8      	; 0x3f2 <SPI_InitScreen+0xa>
 3fa:	00 c0       	rjmp	.+0      	; 0x3fc <SPI_InitScreen+0x14>
 3fc:	00 00       	nop
 3fe:	60 e0       	ldi	r22, 0x00	; 0
 400:	80 e6       	ldi	r24, 0x60	; 96
 402:	0e 94 68 01 	call	0x2d0	; 0x2d0 <Send4BitCommand>
 406:	89 e0       	ldi	r24, 0x09	; 9
 408:	98 e2       	ldi	r25, 0x28	; 40
 40a:	01 97       	sbiw	r24, 0x01	; 1
 40c:	f1 f7       	brne	.-4      	; 0x40a <SPI_InitScreen+0x22>
 40e:	00 c0       	rjmp	.+0      	; 0x410 <SPI_InitScreen+0x28>
 410:	00 00       	nop
 412:	60 e0       	ldi	r22, 0x00	; 0
 414:	80 e6       	ldi	r24, 0x60	; 96
 416:	0e 94 68 01 	call	0x2d0	; 0x2d0 <Send4BitCommand>
 41a:	89 ef       	ldi	r24, 0xF9	; 249
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	01 97       	sbiw	r24, 0x01	; 1
 420:	f1 f7       	brne	.-4      	; 0x41e <SPI_InitScreen+0x36>
 422:	00 c0       	rjmp	.+0      	; 0x424 <SPI_InitScreen+0x3c>
 424:	00 00       	nop
 426:	60 e0       	ldi	r22, 0x00	; 0
 428:	80 e6       	ldi	r24, 0x60	; 96
 42a:	0e 94 68 01 	call	0x2d0	; 0x2d0 <Send4BitCommand>
 42e:	89 ef       	ldi	r24, 0xF9	; 249
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	01 97       	sbiw	r24, 0x01	; 1
 434:	f1 f7       	brne	.-4      	; 0x432 <SPI_InitScreen+0x4a>
 436:	00 c0       	rjmp	.+0      	; 0x438 <SPI_InitScreen+0x50>
 438:	00 00       	nop
 43a:	60 e0       	ldi	r22, 0x00	; 0
 43c:	80 e2       	ldi	r24, 0x20	; 32
 43e:	0e 94 68 01 	call	0x2d0	; 0x2d0 <Send4BitCommand>
 442:	83 ec       	ldi	r24, 0xC3	; 195
 444:	99 e0       	ldi	r25, 0x09	; 9
 446:	01 97       	sbiw	r24, 0x01	; 1
 448:	f1 f7       	brne	.-4      	; 0x446 <SPI_InitScreen+0x5e>
 44a:	00 c0       	rjmp	.+0      	; 0x44c <SPI_InitScreen+0x64>
 44c:	00 00       	nop
 44e:	08 95       	ret

00000450 <ScreenInit>:
 450:	cf 93       	push	r28
 452:	c8 2f       	mov	r28, r24
 454:	81 30       	cpi	r24, 0x01	; 1
 456:	19 f4       	brne	.+6      	; 0x45e <ScreenInit+0xe>
 458:	0e 94 77 01 	call	0x2ee	; 0x2ee <I2C_InitScreen>
 45c:	02 c0       	rjmp	.+4      	; 0x462 <ScreenInit+0x12>
 45e:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <SPI_InitScreen>
 462:	6c 2f       	mov	r22, r28
 464:	88 e2       	ldi	r24, 0x28	; 40
 466:	0e 94 b0 00 	call	0x160	; 0x160 <ScreenInstruction>
 46a:	6c 2f       	mov	r22, r28
 46c:	88 e0       	ldi	r24, 0x08	; 8
 46e:	0e 94 b0 00 	call	0x160	; 0x160 <ScreenInstruction>
 472:	6c 2f       	mov	r22, r28
 474:	81 e0       	ldi	r24, 0x01	; 1
 476:	0e 94 b0 00 	call	0x160	; 0x160 <ScreenInstruction>
 47a:	6c 2f       	mov	r22, r28
 47c:	86 e0       	ldi	r24, 0x06	; 6
 47e:	cf 91       	pop	r28
 480:	0c 94 b0 00 	jmp	0x160	; 0x160 <ScreenInstruction>

00000484 <SPI_MasterInit>:
 484:	84 b1       	in	r24, 0x04	; 4
 486:	8c 62       	ori	r24, 0x2C	; 44
 488:	84 b9       	out	0x04, r24	; 4
 48a:	24 98       	cbi	0x04, 4	; 4
 48c:	2a 9a       	sbi	0x05, 2	; 5
 48e:	82 e5       	ldi	r24, 0x52	; 82
 490:	8c bd       	out	0x2c, r24	; 44
 492:	8d b5       	in	r24, 0x2d	; 45
 494:	8e 7f       	andi	r24, 0xFE	; 254
 496:	8d bd       	out	0x2d, r24	; 45
 498:	08 95       	ret

0000049a <FlushShiftRegister>:
 49a:	2a 9a       	sbi	0x05, 2	; 5
 49c:	00 00       	nop
 49e:	2a 98       	cbi	0x05, 2	; 5
 4a0:	00 00       	nop
 4a2:	08 95       	ret

000004a4 <SPI_MasterTransmit>:
 4a4:	8e bd       	out	0x2e, r24	; 46
 4a6:	0d b4       	in	r0, 0x2d	; 45
 4a8:	07 fe       	sbrs	r0, 7
 4aa:	fd cf       	rjmp	.-6      	; 0x4a6 <SPI_MasterTransmit+0x2>
 4ac:	0e 94 4d 02 	call	0x49a	; 0x49a <FlushShiftRegister>
 4b0:	8e b5       	in	r24, 0x2e	; 46
 4b2:	08 95       	ret

000004b4 <ShiftString>:
 4b4:	cf 92       	push	r12
 4b6:	df 92       	push	r13
 4b8:	ff 92       	push	r15
 4ba:	0f 93       	push	r16
 4bc:	1f 93       	push	r17
 4be:	cf 93       	push	r28
 4c0:	df 93       	push	r29
 4c2:	cd b7       	in	r28, 0x3d	; 61
 4c4:	de b7       	in	r29, 0x3e	; 62
 4c6:	a0 97       	sbiw	r28, 0x20	; 32
 4c8:	0f b6       	in	r0, 0x3f	; 63
 4ca:	f8 94       	cli
 4cc:	de bf       	out	0x3e, r29	; 62
 4ce:	0f be       	out	0x3f, r0	; 63
 4d0:	cd bf       	out	0x3d, r28	; 61
 4d2:	19 8a       	std	Y+17, r1	; 0x11
 4d4:	1a 8a       	std	Y+18, r1	; 0x12
 4d6:	1b 8a       	std	Y+19, r1	; 0x13
 4d8:	1c 8a       	std	Y+20, r1	; 0x14
 4da:	2c e0       	ldi	r18, 0x0C	; 12
 4dc:	fe 01       	movw	r30, r28
 4de:	75 96       	adiw	r30, 0x15	; 21
 4e0:	df 01       	movw	r26, r30
 4e2:	32 2f       	mov	r19, r18
 4e4:	1d 92       	st	X+, r1
 4e6:	3a 95       	dec	r19
 4e8:	e9 f7       	brne	.-6      	; 0x4e4 <ShiftString+0x30>
 4ea:	19 82       	std	Y+1, r1	; 0x01
 4ec:	1a 82       	std	Y+2, r1	; 0x02
 4ee:	1b 82       	std	Y+3, r1	; 0x03
 4f0:	1c 82       	std	Y+4, r1	; 0x04
 4f2:	70 97       	sbiw	r30, 0x10	; 16
 4f4:	df 01       	movw	r26, r30
 4f6:	1d 92       	st	X+, r1
 4f8:	2a 95       	dec	r18
 4fa:	e9 f7       	brne	.-6      	; 0x4f6 <ShiftString+0x42>
 4fc:	20 e2       	ldi	r18, 0x20	; 32
 4fe:	29 8b       	std	Y+17, r18	; 0x11
 500:	ac 01       	movw	r20, r24
 502:	db 01       	movw	r26, r22
 504:	6b 01       	movw	r12, r22
 506:	bc 01       	movw	r22, r24
 508:	21 e0       	ldi	r18, 0x01	; 1
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	fb 01       	movw	r30, r22
 50e:	f1 90       	ld	r15, Z+
 510:	bf 01       	movw	r22, r30
 512:	01 e1       	ldi	r16, 0x11	; 17
 514:	10 e0       	ldi	r17, 0x00	; 0
 516:	0c 0f       	add	r16, r28
 518:	1d 1f       	adc	r17, r29
 51a:	02 0f       	add	r16, r18
 51c:	13 1f       	adc	r17, r19
 51e:	f8 01       	movw	r30, r16
 520:	f0 82       	st	Z, r15
 522:	f6 01       	movw	r30, r12
 524:	f1 90       	ld	r15, Z+
 526:	6f 01       	movw	r12, r30
 528:	01 e0       	ldi	r16, 0x01	; 1
 52a:	10 e0       	ldi	r17, 0x00	; 0
 52c:	0c 0f       	add	r16, r28
 52e:	1d 1f       	adc	r17, r29
 530:	02 0f       	add	r16, r18
 532:	13 1f       	adc	r17, r19
 534:	f8 01       	movw	r30, r16
 536:	f0 82       	st	Z, r15
 538:	2f 5f       	subi	r18, 0xFF	; 255
 53a:	3f 4f       	sbci	r19, 0xFF	; 255
 53c:	20 31       	cpi	r18, 0x10	; 16
 53e:	31 05       	cpc	r19, r1
 540:	29 f7       	brne	.-54     	; 0x50c <ShiftString+0x58>
 542:	fc 01       	movw	r30, r24
 544:	82 81       	ldd	r24, Z+2	; 0x02
 546:	89 83       	std	Y+1, r24	; 0x01
 548:	8e 01       	movw	r16, r28
 54a:	0f 5e       	subi	r16, 0xEF	; 239
 54c:	1f 4f       	sbci	r17, 0xFF	; 255
 54e:	ce 01       	movw	r24, r28
 550:	01 96       	adiw	r24, 0x01	; 1
 552:	9e 01       	movw	r18, r28
 554:	2f 5d       	subi	r18, 0xDF	; 223
 556:	3f 4f       	sbci	r19, 0xFF	; 255
 558:	f8 01       	movw	r30, r16
 55a:	61 91       	ld	r22, Z+
 55c:	8f 01       	movw	r16, r30
 55e:	fa 01       	movw	r30, r20
 560:	61 93       	st	Z+, r22
 562:	af 01       	movw	r20, r30
 564:	fc 01       	movw	r30, r24
 566:	61 91       	ld	r22, Z+
 568:	cf 01       	movw	r24, r30
 56a:	6d 93       	st	X+, r22
 56c:	02 17       	cp	r16, r18
 56e:	13 07       	cpc	r17, r19
 570:	99 f7       	brne	.-26     	; 0x558 <ShiftString+0xa4>
 572:	a0 96       	adiw	r28, 0x20	; 32
 574:	0f b6       	in	r0, 0x3f	; 63
 576:	f8 94       	cli
 578:	de bf       	out	0x3e, r29	; 62
 57a:	0f be       	out	0x3f, r0	; 63
 57c:	cd bf       	out	0x3d, r28	; 61
 57e:	df 91       	pop	r29
 580:	cf 91       	pop	r28
 582:	1f 91       	pop	r17
 584:	0f 91       	pop	r16
 586:	ff 90       	pop	r15
 588:	df 90       	pop	r13
 58a:	cf 90       	pop	r12
 58c:	08 95       	ret

0000058e <main>:
 58e:	cf 93       	push	r28
 590:	df 93       	push	r29
 592:	cd b7       	in	r28, 0x3d	; 61
 594:	de b7       	in	r29, 0x3e	; 62
 596:	a0 97       	sbiw	r28, 0x20	; 32
 598:	0f b6       	in	r0, 0x3f	; 63
 59a:	f8 94       	cli
 59c:	de bf       	out	0x3e, r29	; 62
 59e:	0f be       	out	0x3f, r0	; 63
 5a0:	cd bf       	out	0x3d, r28	; 61
 5a2:	8f e9       	ldi	r24, 0x9F	; 159
 5a4:	9f e0       	ldi	r25, 0x0F	; 15
 5a6:	01 97       	sbiw	r24, 0x01	; 1
 5a8:	f1 f7       	brne	.-4      	; 0x5a6 <main+0x18>
 5aa:	00 c0       	rjmp	.+0      	; 0x5ac <main+0x1e>
 5ac:	00 00       	nop
 5ae:	81 e0       	ldi	r24, 0x01	; 1
 5b0:	0e 94 28 02 	call	0x450	; 0x450 <ScreenInit>
 5b4:	af e9       	ldi	r26, 0x9F	; 159
 5b6:	bf e0       	ldi	r27, 0x0F	; 15
 5b8:	11 97       	sbiw	r26, 0x01	; 1
 5ba:	f1 f7       	brne	.-4      	; 0x5b8 <main+0x2a>
 5bc:	00 c0       	rjmp	.+0      	; 0x5be <main+0x30>
 5be:	00 00       	nop
 5c0:	8f e9       	ldi	r24, 0x9F	; 159
 5c2:	9f e0       	ldi	r25, 0x0F	; 15
 5c4:	01 97       	sbiw	r24, 0x01	; 1
 5c6:	f1 f7       	brne	.-4      	; 0x5c4 <main+0x36>
 5c8:	00 c0       	rjmp	.+0      	; 0x5ca <main+0x3c>
 5ca:	00 00       	nop
 5cc:	61 e0       	ldi	r22, 0x01	; 1
 5ce:	8d e0       	ldi	r24, 0x0D	; 13
 5d0:	0e 94 b0 00 	call	0x160	; 0x160 <ScreenInstruction>
 5d4:	80 e1       	ldi	r24, 0x10	; 16
 5d6:	e0 e0       	ldi	r30, 0x00	; 0
 5d8:	f1 e0       	ldi	r31, 0x01	; 1
 5da:	de 01       	movw	r26, r28
 5dc:	51 96       	adiw	r26, 0x11	; 17
 5de:	01 90       	ld	r0, Z+
 5e0:	0d 92       	st	X+, r0
 5e2:	8a 95       	dec	r24
 5e4:	e1 f7       	brne	.-8      	; 0x5de <main+0x50>
 5e6:	19 82       	std	Y+1, r1	; 0x01
 5e8:	1a 82       	std	Y+2, r1	; 0x02
 5ea:	1b 82       	std	Y+3, r1	; 0x03
 5ec:	1c 82       	std	Y+4, r1	; 0x04
 5ee:	fe 01       	movw	r30, r28
 5f0:	35 96       	adiw	r30, 0x05	; 5
 5f2:	8c e0       	ldi	r24, 0x0C	; 12
 5f4:	df 01       	movw	r26, r30
 5f6:	1d 92       	st	X+, r1
 5f8:	8a 95       	dec	r24
 5fa:	e9 f7       	brne	.-6      	; 0x5f6 <main+0x68>
 5fc:	be 01       	movw	r22, r28
 5fe:	6f 5f       	subi	r22, 0xFF	; 255
 600:	7f 4f       	sbci	r23, 0xFF	; 255
 602:	ce 01       	movw	r24, r28
 604:	41 96       	adiw	r24, 0x11	; 17
 606:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <ShiftString>
 60a:	8f e9       	ldi	r24, 0x9F	; 159
 60c:	9f e0       	ldi	r25, 0x0F	; 15
 60e:	01 97       	sbiw	r24, 0x01	; 1
 610:	f1 f7       	brne	.-4      	; 0x60e <main+0x80>
 612:	00 c0       	rjmp	.+0      	; 0x614 <main+0x86>
 614:	00 00       	nop
 616:	41 e0       	ldi	r20, 0x01	; 1
 618:	6f e0       	ldi	r22, 0x0F	; 15
 61a:	70 e0       	ldi	r23, 0x00	; 0
 61c:	ce 01       	movw	r24, r28
 61e:	41 96       	adiw	r24, 0x11	; 17
 620:	0e 94 40 01 	call	0x280	; 0x280 <PutString>
 624:	9a ea       	ldi	r25, 0xAA	; 170
 626:	a6 ee       	ldi	r26, 0xE6	; 230
 628:	b6 e9       	ldi	r27, 0x96	; 150
 62a:	21 e0       	ldi	r18, 0x01	; 1
 62c:	91 50       	subi	r25, 0x01	; 1
 62e:	a0 40       	sbci	r26, 0x00	; 0
 630:	b0 40       	sbci	r27, 0x00	; 0
 632:	20 40       	sbci	r18, 0x00	; 0
 634:	d9 f7       	brne	.-10     	; 0x62c <main+0x9e>
 636:	00 00       	nop
 638:	8f e9       	ldi	r24, 0x9F	; 159
 63a:	9f e0       	ldi	r25, 0x0F	; 15
 63c:	01 97       	sbiw	r24, 0x01	; 1
 63e:	f1 f7       	brne	.-4      	; 0x63c <main+0xae>
 640:	00 c0       	rjmp	.+0      	; 0x642 <main+0xb4>
 642:	00 00       	nop
 644:	61 e0       	ldi	r22, 0x01	; 1
 646:	81 e0       	ldi	r24, 0x01	; 1
 648:	0e 94 b0 00 	call	0x160	; 0x160 <ScreenInstruction>
 64c:	9f ef       	ldi	r25, 0xFF	; 255
 64e:	a3 ed       	ldi	r26, 0xD3	; 211
 650:	b0 e3       	ldi	r27, 0x30	; 48
 652:	91 50       	subi	r25, 0x01	; 1
 654:	a0 40       	sbci	r26, 0x00	; 0
 656:	b0 40       	sbci	r27, 0x00	; 0
 658:	e1 f7       	brne	.-8      	; 0x652 <main+0xc4>
 65a:	00 c0       	rjmp	.+0      	; 0x65c <main+0xce>
 65c:	00 00       	nop
 65e:	ce cf       	rjmp	.-100    	; 0x5fc <main+0x6e>

00000660 <_exit>:
 660:	f8 94       	cli

00000662 <__stop_program>:
 662:	ff cf       	rjmp	.-2      	; 0x662 <__stop_program>
