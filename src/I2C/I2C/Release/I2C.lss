
I2C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000146  000001ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000146  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000011  00000000  00000000  000001ba  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001cc  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 8c 00 	call	0x118	; 0x118 <main>
  78:	0c 94 a1 00 	jmp	0x142	; 0x142 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <I2C_Init>:
  80:	10 92 b9 00 	sts	0x00B9, r1
  84:	81 e4       	ldi	r24, 0x41	; 65
  86:	80 93 b8 00 	sts	0x00B8, r24
  8a:	20 9a       	sbi	0x04, 0	; 4
  8c:	08 95       	ret

0000008e <I2C_Stop>:
  8e:	84 e9       	ldi	r24, 0x94	; 148
  90:	80 93 bc 00 	sts	0x00BC, r24
  94:	80 91 bc 00 	lds	r24, 0x00BC
  98:	84 fd       	sbrc	r24, 4
  9a:	fc cf       	rjmp	.-8      	; 0x94 <I2C_Stop+0x6>
  9c:	08 95       	ret

0000009e <I2C_WaitForTwint>:
  9e:	80 91 bc 00 	lds	r24, 0x00BC
  a2:	87 ff       	sbrs	r24, 7
  a4:	fc cf       	rjmp	.-8      	; 0x9e <I2C_WaitForTwint>
  a6:	08 95       	ret

000000a8 <I2C_Start>:
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	1f 92       	push	r1
  ae:	cd b7       	in	r28, 0x3d	; 61
  b0:	de b7       	in	r29, 0x3e	; 62
  b2:	28 98       	cbi	0x05, 0	; 5
  b4:	94 ea       	ldi	r25, 0xA4	; 164
  b6:	90 93 bc 00 	sts	0x00BC, r25
  ba:	89 83       	std	Y+1, r24	; 0x01
  bc:	0e 94 4f 00 	call	0x9e	; 0x9e <I2C_WaitForTwint>
  c0:	90 91 b9 00 	lds	r25, 0x00B9
  c4:	98 7f       	andi	r25, 0xF8	; 248
  c6:	89 81       	ldd	r24, Y+1	; 0x01
  c8:	98 30       	cpi	r25, 0x08	; 8
  ca:	61 f4       	brne	.+24     	; 0xe4 <I2C_Start+0x3c>
  cc:	80 93 bb 00 	sts	0x00BB, r24
  d0:	84 e8       	ldi	r24, 0x84	; 132
  d2:	80 93 bc 00 	sts	0x00BC, r24
  d6:	0e 94 4f 00 	call	0x9e	; 0x9e <I2C_WaitForTwint>
  da:	80 91 b9 00 	lds	r24, 0x00B9
  de:	88 7f       	andi	r24, 0xF8	; 248
  e0:	88 31       	cpi	r24, 0x18	; 24
  e2:	31 f0       	breq	.+12     	; 0xf0 <I2C_Start+0x48>
  e4:	28 9a       	sbi	0x05, 0	; 5
  e6:	0f 90       	pop	r0
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	0c 94 47 00 	jmp	0x8e	; 0x8e <I2C_Stop>
  f0:	0f 90       	pop	r0
  f2:	df 91       	pop	r29
  f4:	cf 91       	pop	r28
  f6:	08 95       	ret

000000f8 <I2C_Write>:
  f8:	80 93 bb 00 	sts	0x00BB, r24
  fc:	84 e8       	ldi	r24, 0x84	; 132
  fe:	80 93 bc 00 	sts	0x00BC, r24
 102:	0e 94 4f 00 	call	0x9e	; 0x9e <I2C_WaitForTwint>
 106:	80 91 b9 00 	lds	r24, 0x00B9
 10a:	88 7f       	andi	r24, 0xF8	; 248
 10c:	88 32       	cpi	r24, 0x28	; 40
 10e:	19 f0       	breq	.+6      	; 0x116 <I2C_Write+0x1e>
 110:	28 9a       	sbi	0x05, 0	; 5
 112:	0c 94 47 00 	jmp	0x8e	; 0x8e <I2C_Stop>
 116:	08 95       	ret

00000118 <main>:
 118:	0e 94 40 00 	call	0x80	; 0x80 <I2C_Init>
 11c:	80 e4       	ldi	r24, 0x40	; 64
 11e:	0e 94 54 00 	call	0xa8	; 0xa8 <I2C_Start>
 122:	80 ef       	ldi	r24, 0xF0	; 240
 124:	0e 94 7c 00 	call	0xf8	; 0xf8 <I2C_Write>
 128:	8a e2       	ldi	r24, 0x2A	; 42
 12a:	0e 94 7c 00 	call	0xf8	; 0xf8 <I2C_Write>
 12e:	8f ef       	ldi	r24, 0xFF	; 255
 130:	0e 94 7c 00 	call	0xf8	; 0xf8 <I2C_Write>
 134:	81 e4       	ldi	r24, 0x41	; 65
 136:	0e 94 7c 00 	call	0xf8	; 0xf8 <I2C_Write>
 13a:	0e 94 47 00 	call	0x8e	; 0x8e <I2C_Stop>
 13e:	80 e0       	ldi	r24, 0x00	; 0
 140:	08 95       	ret

00000142 <_exit>:
 142:	f8 94       	cli

00000144 <__stop_program>:
 144:	ff cf       	rjmp	.-2      	; 0x144 <__stop_program>
