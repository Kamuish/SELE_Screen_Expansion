Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o (exit)
/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
                              ./Screen/LCD.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o
LOAD ./Screen/LCD.o
LOAD ./I2C_comms.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libatmega328p.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x3fe
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000008a        0x8 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 *(.init9)
 *(.text)
 .text          0x0000000000000092        0x4 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000092                __vector_22
                0x0000000000000092                __vector_1
                0x0000000000000092                __vector_24
                0x0000000000000092                __vector_12
                0x0000000000000092                __bad_interrupt
                0x0000000000000092                __vector_6
                0x0000000000000092                __vector_3
                0x0000000000000092                __vector_23
                0x0000000000000092                __vector_25
                0x0000000000000092                __vector_11
                0x0000000000000092                __vector_13
                0x0000000000000092                __vector_17
                0x0000000000000092                __vector_19
                0x0000000000000092                __vector_7
                0x0000000000000092                __vector_5
                0x0000000000000092                __vector_4
                0x0000000000000092                __vector_9
                0x0000000000000092                __vector_2
                0x0000000000000092                __vector_21
                0x0000000000000092                __vector_15
                0x0000000000000092                __vector_8
                0x0000000000000092                __vector_14
                0x0000000000000092                __vector_10
                0x0000000000000092                __vector_16
                0x0000000000000092                __vector_18
                0x0000000000000092                __vector_20
 .text          0x0000000000000096        0x0 ./Screen/LCD.o
 .text          0x0000000000000096        0x0 ./I2C_comms.o
 .text          0x0000000000000096        0x0 ./main.o
 .text          0x0000000000000096        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000096        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000096                . = ALIGN (0x2)
 *(.text.*)
 .text.transfer_data
                0x0000000000000096        0xc ./Screen/LCD.o
                0x0000000000000096                transfer_data
 .text.screen_instruction
                0x00000000000000a2       0x7a ./Screen/LCD.o
                0x00000000000000a2                screen_instruction
 .text.screen_data
                0x000000000000011c       0x6c ./Screen/LCD.o
                0x000000000000011c                screen_data
 .text.put_string
                0x0000000000000188       0x34 ./Screen/LCD.o
                0x0000000000000188                put_string
 .text.send_4_bit_command
                0x00000000000001bc       0x22 ./Screen/LCD.o
                0x00000000000001bc                send_4_bit_command
 .text.screen_init
                0x00000000000001de       0x7e ./Screen/LCD.o
                0x00000000000001de                screen_init
 .text.WaitForTwint
                0x000000000000025c        0xa ./I2C_comms.o
                0x000000000000025c                WaitForTwint
 .text.i2c_init
                0x0000000000000266        0xc ./I2C_comms.o
                0x0000000000000266                i2c_init
 .text.i2c_start
                0x0000000000000272       0x26 ./I2C_comms.o
                0x0000000000000272                i2c_start
 .text.i2c_write
                0x0000000000000298       0x12 ./I2C_comms.o
                0x0000000000000298                i2c_write
 .text.i2c_stop
                0x00000000000002aa       0x10 ./I2C_comms.o
                0x00000000000002aa                i2c_stop
 .text.startup.main
                0x00000000000002ba      0x140 ./main.o
                0x00000000000002ba                main
 .text.libgcc.mul
                0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
                0x00000000000003fa                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000003fa        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
                0x00000000000003fa                exit
                0x00000000000003fa                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000003fa        0x4 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x00000000000003fe                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x00000000000003fe                _etext = .

.data           0x0000000000800100       0x1a load address 0x00000000000003fe
                0x0000000000800100                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 .data          0x0000000000800100        0x0 ./Screen/LCD.o
 .data          0x0000000000800100        0x0 ./I2C_comms.o
 .data          0x0000000000800100        0x0 ./main.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 .rodata.transfer_data.str1.1
                0x0000000000800100        0x4 ./Screen/LCD.o
 .rodata.main.str1.1
                0x0000000000800104       0x15 ./main.o
                                         0x19 (size before relaxing)
 *(.gnu.linkonce.r*)
                0x000000000080011a                . = ALIGN (0x2)
 *fill*         0x0000000000800119        0x1 
                0x000000000080011a                _edata = .
                0x000000000080011a                PROVIDE (__data_end = .)

.bss            0x000000000080011a        0x0
                [!provide]                        PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x000000000080011a        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 .bss           0x000000000080011a        0x0 ./Screen/LCD.o
 .bss           0x000000000080011a        0x0 ./I2C_comms.o
 .bss           0x000000000080011a        0x0 ./main.o
 .bss           0x000000000080011a        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080011a        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                [!provide]                        PROVIDE (__bss_end = .)
                0x00000000000003fe                __data_load_start = LOADADDR (.data)
                0x0000000000000418                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080011a        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x000000000080011a                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./Screen/LCD.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./I2C_comms.o
 .comment       0x0000000000000011       0x12 ./main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x5f4
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o

.debug_abbrev   0x0000000000000000      0x5a2
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x208
 *(.debug_str)
 .debug_str     0x0000000000000000      0x208 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega328p.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(I2C.elf elf32-avr)
LOAD linker stubs
